----***Python数据结构***----



1.列表
1.1列表的创建和删除
#test
a_list=['wahaha','jim1',2,3,[4,5]]    
或者  b_list=list('hello world')   调用list函数
del a_list删除对象，如果无别的对象指向其则系统会自动删除值，回收内存空间

1.2元素增加和删除
+有一样的效果，但是是新建一个新的列表        //需要复制原来的元素，时间花销大
append，原地修改列表，在列表尾部加入元素     
extend(),加入另一个列表的所有元素
insert(a,b)，将元素插入到指定的位置a是位置，其中是从0开始的，后面是元素
*法可以用来列表全部自身的复制
del a_lisy[1]删除指定位置的元素
pop(a)指定下标的元素，默认最后一个元素
remove(a)删除首次出现的指定元素，不存在则抛出异常


1.3列表元素的访问和计数
a_list.index(value,[start,[stop]])
a_list.count[a]某个元素出现的次数
in --not in---在不在列表里面

1.4切片操作
a_list[a:b:c]  a是起始位置 b是截止位置 c是步长 但是其不会因为下标超出而报错而是简单返回一个空列表
//实质上，顾名思义，切片，将列表进行切片，然后在结合相应函数操作
可以实现列表的增，删，元素替换等
注意：切片是浅复制，就和两个对象指向相同一个列表值不同。实际是重新复制了一个列表值，在内存中重新分配对象。


