1函数   ******最好使用局部变量，减少函数间的耦合性，完成单一功能

1.1函数定义
def demo([形参]):
    函数体
    
    
1.2形参和实参
如果形参是可变序列，并且在函数内部修改元素，实现增删改的操作，可以反映到函数外的结果

1.3参数类型
默认参数   ----def demo(a=3,b,c):     ----如果没有赋值则调用默认值，赋值了就用实参
关键参数    -----def demo(a,b,c):     
           demo(a=3,4,7)    - -----指的传递的实参，这种指明了参数，可以不按照顺序
可变长度参数   -----  def demo(*p):    ----用来接受任意多的参数然后将其放在一个元组里传入
              -----def demo(**p):     ---***************************字典里******
参数传递的解包    ------def demo(a,b,c)
                            print a+b+c
                l=[1,2,3,4]             
                demo(*l)
               
               
               
 1.4return语句
 可以没有返回值，函数的写的过程中，是在函数体中return的类型来确定的，给予了极大的空间，依据不同的结果可以返回不同类型的返回值
 不写则返回空
 
 1.5变量作用域
 在函数体内部的是局部变量
 如果要用到函数外的变量，在函数体内 声明同样的 eg: 
 
 i=3
 def demo():
    global i
    i=i*3
 print i
 
 ******如果在函数体内部声明，则其变成全局变量
 
 1.6lambda
 *************实际就是一个小程序，完成一行代码的，只能有一行表达式
 eg:  f=lambda x,y,z:x+y+z
 x,y,z是参数，后面一行是完成的代码
 
 
 1.7简单函数介绍
 map(函数，序列）
 作用是将函数作用到序列的每一个元素，然后返回一个列表
 map(函数，序列，序列)   -----这是因为函数的形参有两个或多个才会跟多个序列
 reduce(函数，序列)----累计的方式，累计的作用函数
 filter()     ----将单函数作用到一个序列，返回其中为true的元素组成的列表
 yield ----？？？？？？？产生一个迭代器对象，然后在每一次调用就调用一次循环
 dis.dis()   ----查看字节码
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

 
    
